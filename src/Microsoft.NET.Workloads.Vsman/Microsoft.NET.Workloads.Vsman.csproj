<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project Sdk="Microsoft.Build.NoTargets">

  <PropertyGroup>
    <TargetFramework>$(SdkTargetFramework)</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <!-- If ReferenceOutputAssembly is not set to false, it will attempt to compile the VSMAN file itself (somehow ends up in the list of Compile items). -->
    <!-- CSC error CS0009: Metadata file 'C:\Code\project-system\artifacts\Release\VSSetup\Insertion\SetupManifest.vsman' could not be opened. Image is too small. [C:\Code\project-system\setup\SetupManifest\Setup.csproj] -->
    <!-- If Restore isn't explicitly sent, the Microsoft.VisualStudio.Internal.MicroBuild.Vsman PackageReference in the vsmanproj will not be restored. -->
    <!-- <ProjectReference Include="Microsoft.NET.Workloads.Vsman.vsmanproj" ReferenceOutputAssembly="false" Targets="Restore;Build" /> -->
    <!-- <ProjectReference Include="Microsoft.NET.Workloads.Vsman.vsmanproj" /> -->
    <!-- <ProjectReference Include="Microsoft.NET.Workloads.Vsman.vsmanproj" Targets="Restore;Build" Properties="LanguageTargets=$(MSBuildToolsPath)\Microsoft.CSharp.targets" /> -->
    <!-- <ProjectReference Include="Microsoft.NET.Workloads.Vsman.vsmanproj" Targets="Restore;Build" Properties="Language=C#" /> -->
    <!-- <ProjectReference Include="Microsoft.NET.Workloads.Vsman.vsmanproj" Targets="Restore;Build" /> -->
  </ItemGroup>

  <!-- <MSBuild Projects="Microsoft.NET.Workloads.Vsman.vsmanproj" Targets="Restore;Build" Properties="Configuration=$(Configuration);Platform=$(Platform)" /> -->
  <Target Name="BuildVsmanProj" AfterTargets="Build" Condition="'$(CreateVSInsertion)' == 'true'">

    <PropertyGroup>
      <WorkloadDropDirectory>$(ArtifactsDir)workloads\drops</WorkloadDropDirectory>
      <!-- <WorkloadDropDirectory>D:\Workspace\drops\</WorkloadDropDirectory> -->
    </PropertyGroup>

    

    <!-- Gets the name of each drop folder and truncates them to only the workload name. -->
    <Exec ConsoleToMSBuild="true" Command="powershell -NonInteractive -NoLogo -NoProfile -Command &quot;Get-ChildItem -Path $(WorkloadDropDirectory) -Directory | Foreach-Object { $_.Name.Replace('Workload.VSDrop.', '') }&quot;">
      <Output TaskParameter="ConsoleOutput" ItemName="WorkloadName" />
    </Exec>

    <!-- <Message Importance="High" Text="ThisThing: %(WorkloadName.Identity)" /> -->

    <!--
      VstsDropNames: Sets the URL partial path for the VSDrop that is written into the VSMAN file.
      VsixOutputPath: Sets the output directory for the VSMAN file when the .vsmanproj is built.
      AssemblyName: Sets the name of the VSMAN file.
    -->
    <Exec Command='
"$(MSBuildToolsPath)\MSBuild.exe" Microsoft.NET.Workloads.Vsman.vsmanproj /restore /t:Build ^
  /p:VstsDropNames=Products/dotnet/workloads/%(WorkloadName.Identity)/$([System.DateTime]::Now.ToString("yyyyMMdd.hhmmss.fff")) ^
  /p:VsixOutputPath=$(WorkloadDropDirectory)Workload.VSDrop.%(WorkloadName.Identity)\ ^
  /p:AssemblyName=%(WorkloadName.Identity)
' />
  </Target>

</Project>