# Pipeline: https://dev.azure.com/dnceng/internal/_build?definitionId=1298

trigger: none
pr: none

parameters:
- name: publishToFeed
  displayName: Publish to feed
  type: boolean
  default: false
- name: feedForPublishing
  displayName: Feed for publishing
  type: string
  default: public/dotnet8-workloads
- name: createVSInsertion
  displayName: Create VS insertion
  type: boolean
  default: false
- name: workloadsForVSInsertion
  displayName: Workloads for VS insertion
  type: object
  default:
  - aspire
  - emsdk
  - mono
- name: workloadTypesForVSInsertion
  displayName: Workload types for VS insertion
  type: object
  default:
  - components
  - packs
  - precomponents

variables:
- template: /eng/common/templates-official/variables/pool-providers.yml@self
- ${{ if eq(variables['_RunAsPublic'], 'true') }}:
  - name: _AdditionalBuildArgs
    value: ''
  - name: _BuildJobDisplayName
    value: 'Build and Test'
- ${{ else }}:
  - name: _AdditionalBuildArgs
    value: '/p:Test=false'
  - name: _BuildJobDisplayName
    value: 'Build, Sign and Publish'
- name: _TeamName
  value: DotNet-Cli
- name: HelixApiAccessToken
  value: ''
- name: _RunAsPublic
  value: True
- name: _RunAsInternal
  value: False
- name: _InternalBuildArgs
  value: ''
- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - name: _RunAsPublic
    value: False
  - name: _RunAsInternal
    value: True
  - name: _SignType
    value: real
  # DotNet-Blob-Feed provides: dotnetfeed-storage-access-key-1
  # Publish-Build-Assets provides: MaestroAccessToken, BotAccount-dotnet-maestro-bot-PAT
  # DotNet-HelixApi-Access provides: HelixApiAccessToken
  - group: DotNet-Blob-Feed
  - group: Publish-Build-Assets
  - group: DotNet-HelixApi-Access
  - group: SDL_Settings
  - name: _InternalBuildArgs
    value: /p:DotNetSignType=$(_SignType)
      /p:TeamName=$(_TeamName)
      /p:DotNetPublishUsingPipelines=true
      /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
  - name: PostBuildSign
    value: true
  # Release-Pipeline provides: MaestroAccessToken, BotAccount-dotnet-bot-repo-PAT, dn-bot-all-drop-rw-code-rw-release-all
  - group: Release-Pipeline
  # DotNet-DevDiv-Insertion-Workflow-Variables provides: dn-bot-devdiv-drop-rw-code-rw
  - group: DotNet-DevDiv-Insertion-Workflow-Variables

resources:
  repositories:
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    sdl:
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: 1es-windows-2022
        os: windows
      policheck:
        enabled: true
      tsa:
        enabled: true
    stages:
    - stage: Build
      displayName: Build
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          # artifacts:
          #   publish:
          #     artifacts: true
          #     logs: false
          #     manifests: true
          enableMicrobuild: true
          enablePublishBuildAssets: true
          enableTelemetry: true
          enablePublishUsingPipelines: true
          publishAssetsImmediately: true
          enableSbom: true
          jobs:
          - job: buildRepo
            displayName: Build Repo
            timeoutInMinutes: 60
            pool:
              name: $(DncEngInternalBuildPool)
              image: windows.vs2022preview.amd64
              os: windows
            steps:
            # - pwsh: >-
            #     $workloadGitHubPat = ConvertTo-SecureString -String "$(BotAccount-dotnet-bot-repo-PAT)" -AsPlainText -Force
            #     $workloadAzDOPat
            #     Write-Host "##vso[task.setvariable variable=WorkloadGitHubPat]$workloadGitHubPat"
            #     Write-Host "##vso[task.setvariable variable=WorkloadAzDOPat]$vsDropName"
            #   displayName: Set PAT variables

            - ${{ if eq(parameters.createVSInsertion, true) }}:
              - task: AzureCLI@2
                displayName: Download workloads for VS insertion
                inputs:
                  # TODO: Need our own subscription
                  azureSubscription: DotNetStaging
                  scriptType: pscore
                  scriptPath: $(Build.SourcesDirectory)/eng/download-workloads.ps1
                  arguments: >-
                    -workloadPath $(Build.SourcesDirectory)/artifacts/workloads
                    -gitHubPat (ConvertTo-SecureString -String "$(BotAccount-dotnet-bot-repo-PAT)" -AsPlainText -Force)
                    -azDOPat (ConvertTo-SecureString -String "$(dn-bot-all-drop-rw-code-rw-release-all)" -AsPlainText -Force)

            # - task: AzureCLI@2
            #   displayName: Gather Workloads
            #   inputs:
            #     # TODO: Need our own subscription
            #     azureSubscription: DotNetStaging
            #     scriptType: pscore
            #     scriptPath: $(Build.SourcesDirectory)/eng/publish-workloads.ps1
            #     arguments: '-gitHubPat (ConvertTo-SecureString -String "$(BotAccount-dotnet-bot-repo-PAT)" -AsPlainText -Force) -azDevPat (ConvertTo-SecureString -String "$(dn-bot-all-drop-rw-code-rw-release-all)" -AsPlainText -Force) -password (ConvertTo-SecureString -String "$(MaestroAccessToken)" -AsPlainText -Force)'
            
            # - task: AzureCLI@2
            #   displayName: Build Solution
            #   inputs:
            #     # TODO: Need our own subscription
            #     azureSubscription: DotNetStaging
            #     scriptType: pscore
            #     scriptPath: $(Build.SourcesDirectory)/eng/common/build.ps1
            #     arguments: -restore -build -ci -msbuildEngine vs -configuration Release /p:CreateVSInsertion=${{ parameters.createVSInsertion }}

            # /p:WorkloadGitHubPat=$(BotAccount-dotnet-bot-repo-PAT)
            # /p:WorkloadAzDOPat=$(dn-bot-all-drop-rw-code-rw-release-all)

            # /p:WorkloadGitHubPat=(ConvertTo-SecureString -String "$(BotAccount-dotnet-bot-repo-PAT)" -AsPlainText -Force)
            # /p:WorkloadAzDOPat=(ConvertTo-SecureString -String "$(dn-bot-all-drop-rw-code-rw-release-all)" -AsPlainText -Force)

            - script: >-
                $(Build.SourcesDirectory)/build.cmd -ci -configuration Release
                /p:CreateVSInsertion=${{ parameters.createVSInsertion }}
                /p:WorkloadDirectory=$(Build.SourcesDirectory)/artifacts/workloads
              displayName: Build solution

            # - script: eng\common\CIBuild.cmd
            #     -configuration $(_BuildConfig)
            #     -prepareMachine
            #     $(_AdditionalBuildArgs)
            #     $(_InternalBuildArgs)
            #   displayName: $(_BuildJobDisplayName)
            - ${{ if eq(parameters.publishToFeed, true) }}:
              - task: 1ES.PublishNuget@1
                displayName: Publish NuGet package
                inputs:
                  useDotNetTask: true
                  packagesToPush: $(Build.SourcesDirectory)/artifacts/packages/**/*.nupkg
                  packageParentPath: $(Build.SourcesDirectory)/artifacts/packages
                  publishVstsFeed: ${{ parameters.feedForPublishing }}
                  nuGetFeedType: internal
                  allowPackageConflicts: false
                  publishPackageMetadata: true
            - ${{ if eq(parameters.createVSInsertion, true) }}:
              - ${{ each workloadShortName in parameters.workloadsForVSInsertion }}:
                - ${{ each workloadType in parameters.workloadTypesForVSInsertion }}:
                  # - pwsh: "Write-Host 'Workload: $(${{ workload }}_test)'"
                  #   displayName: Display ${{ workload }}

                  # Docs: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/outputs/microbuild-vsts-drop
                  # YAML reference (original task): https://dev.azure.com/devdiv/Engineering/_git/MicroBuild?path=/src/Tasks/UploadDrop/task.json
                  - task: 1ES.MicroBuildVstsDrop@1
                    displayName: 'Publish insertion drop: ${{ workloadShortName }}_${{ workloadType }}'
                    inputs:
                      dropFolder: $(${{ workloadShortName }}_${{ workloadType }}_dir)
                      dropName: $(${{ workloadShortName }}_${{ workloadType }}_name)
                      # See: https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/35351/Retain-Drops
                      dropRetentionDays: 183
                      # dropRetentionDays: 90
                      accessToken: $(dn-bot-devdiv-drop-rw-code-rw)
                      dropServiceUri: https://devdiv.artifacts.visualstudio.com
                      vsDropServiceUri: https://vsdrop.corp.microsoft.com/file/v1